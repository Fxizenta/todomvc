{"version":3,"sources":["components/Filter.js","components/PersonFrom.js","components/Person.js","components/Persons.js","services/personDB.js","components/Notification.js","App.js","index.js"],"names":["Filter","props","value","filter","onChange","handleFilterChange","PersonFrom","onSubmit","addPerson","newName","handlePersonChange","newPhone","handlePhoneChange","type","Person","name","phone","deletePerson","onClick","Persons","persons","person","toUpperCase","includes","map","number","handleDeletePerson","id","baseUrl","newObject","axios","post","then","response","data","put","delete","Notification","message","className","App","useState","setPersons","setNewName","setNewPhone","setFilter","errorMessage","setErrorMessage","useEffect","get","event","target","preventDefault","personObject","Math","floor","random","length","window","confirm","previousPerson","find","n","personDB","updatedPerson","catch","error","console","log","concat","setTimeout","newPerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8b2161e3.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Filter = props => {\r\n    return (\r\n        <from>\r\n            filter show with:\r\n            <input value={props.filter} onChange={props.handleFilterChange}/>\r\n        </from>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from \"react\";\r\n\r\nconst PersonFrom = (props) => {\r\n    return (\r\n        <form onSubmit={props.addPerson}>\r\n            name:\r\n            <input\r\n                value={props.newName}\r\n                onChange={props.handlePersonChange}/>\r\n            <br/>\r\n            number:\r\n            <input\r\n                value={props.newPhone}\r\n                onChange={props.handlePhoneChange}/>\r\n            <br/>\r\n            <button type=\"submit\">add</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PersonFrom","import React from 'react'\r\n\r\nconst Person = ({name, phone, deletePerson}) => {\r\n    return (\r\n        <li>{name} {phone}\r\n            <button onClick={deletePerson}>delete</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Person","import React from \"react\";\r\nimport Person from \"./Person\";\r\n\r\nconst Persons = (props) => {\r\n    return (\r\n        <ul>\r\n            {props.persons.filter(person => person.name.toUpperCase().includes(props.filter.toUpperCase())).map(person => (\r\n                <Person key={person.id} name={person.name} phone={person.number}\r\n                        deletePerson={props.handleDeletePerson(person.name, person.id)}/>)\r\n            )}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Persons","import axios from \"axios\";\r\nconst baseUrl=\"http://localhost:3001/api/persons\"\r\n//const baseUrl = \"http://localhost:3001/persons\";\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl);\r\n    return request.then(response => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n    const request = axios.post(baseUrl, newObject);\r\n    return request.then(response => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n    return request.then(response => response.data);\r\n};\r\n\r\nconst deletePerson = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`);\r\n    return request.then(response => response.data);\r\n};\r\n\r\nexport default {getAll, create, update, deletePerson};","import React from 'react'\r\n\r\nconst Notification = ({message}) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"error\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification;","import React, {useState, useEffect} from 'react'\nimport Filter from \"./components/Filter\";\nimport PersonFrom from \"./components/PersonFrom\";\nimport Persons from \"./components/Persons\";\nimport axios from \"axios\";\nimport personDB from \"./services/personDB\";\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newPhone, setNewPhone] = useState('')\n    const [filter, setFilter] = useState('')\n    const [errorMessage, setErrorMessage] = useState(null)\n\n    const addPerson = event => {\n        event.preventDefault();\n        const personObject = {\n            name: newName,\n            number: newPhone,\n            id: Math.floor(Math.random() * 101)//随机id\n        };\n\n        if (\n            persons.filter(person => person.name === personObject.name).length > 0//存在重复\n        ) {\n            if (\n                window.confirm(\n                    `${\n                        personObject.name\n                    } is already in phonebook`\n                )\n            ) {\n                const previousPerson = persons.find(n => n.name === newName);//更新同名为最新信息\n                personDB\n                    .update(previousPerson.id, {...previousPerson, number: newPhone})\n                    .then(updatedPerson => {\n                        setPersons(\n                            persons.map(n => (n.name === newName ? updatedPerson : n))\n                        );\n                    })\n                    .catch(error => {\n                        console.log(error);\n                        setErrorMessage(`update faild `)\n                    });\n                setPersons(persons.concat(personObject));\n                setErrorMessage(`change ${personObject.name}`)\n                setNewName(\"\");\n                setNewPhone(\"\");\n                setTimeout(() => {\n                    setErrorMessage(null);\n                }, 3000);\n            }\n        } else {\n            personDB\n                .create(personObject)\n                .then(newPerson => {\n                    setPersons(persons.concat(newPerson));\n                    setErrorMessage(`add ${personObject.name}`)\n                    setNewName(\"\");\n                    setNewPhone(\"\");\n                })\n                .catch(error => {\n                    setErrorMessage(`${error.response.data.error}`);\n                    console.log(error.response.data);\n                });\n            setTimeout(() => {\n                setErrorMessage(null);\n            }, 3000);\n        }\n    };\n\n    const handlePersonChange = (event) => {\n        setNewName(event.target.value)\n    };\n\n    const handlePhoneChange = (event) => {\n        setNewPhone(event.target.value)\n    };\n\n    const handleFilterChange = (event) => {\n        setFilter(event.target.value)\n    };\n\n    const handleDeletePerson = (name, id) => {\n        return () => {\n            if (window.confirm(`Are you sure delete ${name}`)) {\n                personDB.deletePerson(id).then(\n                    () => {\n                        setPersons(persons.filter(n => n.id !== id));\n                        setErrorMessage(`delete error ${name}`)\n                        setNewName(\"\")\n                        setNewPhone(\"\")\n                    }\n                )\n                    .catch(error => {\n                        setPersons(persons.filter(n => n.name !== name));\n                        setErrorMessage(`don\\'t have ${name} on the phonebook`)\n                    });\n                setTimeout(() => {\n                    setErrorMessage(null);\n                }, 3000);\n            }\n\n        }\n    }\n\n    useEffect(() => {\n        axios.get('http://localhost:3001/api/persons').then(response => {\n            setPersons(response.data);\n        });\n    }, []);\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification message={errorMessage}/>\n            <Filter filter={filter} handleFilterChange={handleFilterChange}/>\n            <h2>Add New</h2>\n            <PersonFrom\n                newName={newName}\n                newPhone={newPhone}\n                handlePhoneChange={handlePhoneChange}\n                handlePersonChange={handlePersonChange}\n                addPerson={addPerson}\n            />\n            <h2>Numbers</h2>\n            <Persons persons={persons} filter={filter} handleDeletePerson={handleDeletePerson}/>\n\n            ...\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}